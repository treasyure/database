For this homework, I mainly implemented the find_by_template(self, template, field_list=None, limit=None, offset=None, order_by=None) ,delete_by_template(self, template) , update_by_template(self, template, new_values) and insert(self, new_record) functions into RDBDataTable and CSVDataTable files. 
For CSV, find_by_template use two function, first matches_templates test whether the row matches template, so we use the key from template to get value from row and then check whether the value equals to that in template. If two equal, then we add row into the result using _project function. In delete function, I just use remove(built-in function) to remove the matched rows. Update function just replace the values for matched row by new_values. For by_key functions, I just zip all key columns together to form the primary key and then simply throw it back to the template functions.
Additionally, I changed the dictreader settings using delimiter under _load function. So we can also process the case when original file is not separated but by others like semicolon.
For RDB files, we are going to write sql commands in string and then sent it back to the run_q function. Therefore we parse the keys and values. I generally write the command in sql workbench first and then construct the RDB string follow by that. Run_q function connect the python code into workbench database, I wrote it followed by Professorâ€™s helper file.
Testfiles for RDB and CSV are generally the same, except connection info for CSV is just a directory but for RDB is connecting to workbench using run_q. Therefore, this cause one significant difference between two table, CSV only change the data restore in the data structure, therefore every time call a function we get the original data file unless we use save function. However for RDB, every function call and every change is saved to the database. So the test output is different between CSV and RDB for update functions (I also changed some setting to better show the result). 
Besides, I also changed configurations to save consoles output into a text file. 



